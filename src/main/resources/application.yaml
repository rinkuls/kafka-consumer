server:
  port: 8082
dbservice:
  url: "http://todo-management-release.my-db.svc.cluster.local:8780/student/add"
avro:
  topic:
    name: "avroTopic"
  dlt:
    name: "topicForWrongSchema"
    group: "GroupWrongSchema1"# Name for the DLT topic

spring:
  kafka:
    bootstrap-servers-compose: "172.20.0.1:9092"
    bootstrap-servers: "kafka-deployment.kafka-infra.svc.cluster.local:9092"
    consumer:
      keyDeserializer: "org.springframework.kafka.support.serializer.ErrorHandlingDeserializer"
      valueDeserializer: "org.springframework.kafka.support.serializer.ErrorHandlingDeserializer"
      autoOffsetReset: "earliest"
      properties:
        spring.deserializer.key.delegate.class: "org.apache.kafka.common.serialization.StringDeserializer"
        spring.deserializer.value.delegate.class: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
        schema.registry.url: "http://my-schema-registry.kafka-infra.svc.cluster.local:8081"
        DockerComposeSchemaUrl: "http://schema-registry:8081"
        specific.avro.reader: "true"
      max:
        poll:
          interval.ms: 2000000
          records: 10
      enable-auto-commit: false
    listener:
      ack-mode: "MANUAL"
    group:
      id: "avroTopic-group"

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
    platform: h2

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2 # URL path to access the H2 console
      settings:
        web-allow-others: true

  application:
    name: kafka-receiver

  flyway:
    enabled: false
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER # Path matching strategy for Spring MVC


retry:
  attempts: 3  # Number of retry attempts for the main topic
  backoff:
    initialInterval: 2000  # Initial interval between retries in ms
    multiplier: 2.0  # Multiplier for the retry backoff
